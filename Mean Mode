/* *  MeanMode                                                                            
*  Have the function MeanMode(arr) take the array of numbers stored in arr and         
*  return 1 if the mode equals the mean, 0 if they don't equal each other              
*  (ie. [5, 3, 3, 3, 1] should return 1 because the mode (3) equals the mean (3)).     
*  The array will not be empty, will only contain positive integers, and will not      
* contain more than one mode. 
*/

// input - array of numbers
// output : 1 - if the mean and mode are same
//         : 0 - if the mean and mode are different
// process - have helper functions to find the mean (average of all numbers) and mode(the no that occurs the most)
// mean - sum of all numbers / no of numbers
// mode - loop through the numbers, for every no, have a count of the no of times 
// the number occurs in an object. loop through the keys in the obj, and find the max count

function findMean(numbers) {
  var sum = numbers.reduce(function(a, b) {
    return a + b;
  });
  return sum / numbers.length;
}

function getNumAndCountOfNum(numbers) {
   return numbers.reduce(function(obj, num) {
     if (obj[num] === undefined) {
       obj[num] = 1;
     }
     obj[num] += 1;
     return obj;
   }, {});
}

function findMode(numAndCountOfNum) {
  var max = 0;
  var num = 0;
  for(var i in numAndCountOfNum) {
    if (numAndCountOfNum[i] > max) {
      max = numAndCountOfNum[i];
      num = i;
    }
  }
  return parseInt(num);
}

function meanMode(numbers) {
  var mean = findMean(numbers);
  var numAndCountOfNum = getNumAndCountOfNum(numbers);
  var mode = findMode(numAndCountOfNum);
  return mean === mode ? 1 :0;
}
