/* We have an array of heights, representing the altitude along a walking 
 * trail. Given start/end indexes into the array, return the number of "big" 
 * steps for a walk starting at the start index and ending at the end index. 
 * We'll say that step is big if it is 5 or more up or down. The start end end 
 * index will both be valid indexes into the array with start <= end.
 */
 
 // input - array of altitudes, start, end index
 // output - number of big steps (big step - altitude >= 5)
 // process - 1. Traverse through the array of altitudes from start till end - 1
 // 2. Maintain a counter. Check for the absolute difference between the current altitude and the next altitude. 
 // 3. If the diff is greater than or equal to 5, increase the counter. Repeat the steps for the altitudes from start till end - 1
 // 4. Return the counter value
 
 function bigHeights(altitudes, start, end) {
   return altitudes.reduce(function(steps, altitude, index) {
     if (index >= start && index < end) {
       if (Math.abs(altitude - altitudes[index + 1]) >= 5) {
         steps += 1;
        }
     }
     return steps;
   }, 0);
 }
 
 function assertEquals(actual, expected, testName) {
   if (actual === expected) {
     return 'passed';
   } else {
     return 'FAILED ' + testName + ' Expected ' + expected + ', but got ' + actual;
   }
 }
 
 assertEquals(bigHeights([7, 3, 9, 1, 10], 1, 3), 2, 'count the number of big steps');
