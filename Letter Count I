/* Letter Count I                                                                      
*  Have the function LetterCountI(str) take the str parameter being passed and return  
*  the first word with the greatest number of repeated letters. For example:           
*  "Today, is the greatest day ever!" should return greatest because it has 2 e's      
*  (and 2 t's) and it comes before ever which also has 2 e's. If there are no words    
*  with repeating letters return <b>-1</b>. Words will be separated by spaces.         
*/

// input - String
// output - word containing the max repeated letters
// process - Break the string into words.
//         - For each word, find the number of repeated letters.
//         - Compare the no of repeated letters of all the words and return the word which has the maximum no of repeated letters.

function getLetterCountObj(word) {
  return word.split('').reduce(function(obj, letter) {
   if (obj[letter] === undefined) {
     obj[letter] = 1;
     return obj;
   } 
   obj[letter] = obj[letter] + 1;
   return obj;
  }, {});
}

function findMaxLetterCount(letterCountObj) {
  var keys = Object.keys(letterCountObj);
  var maxCount = 0;
  for (var i in letterCountObj) {
    if (letterCountObj[i] > maxCount) {
      maxCount = letterCountObj[i];
    }
  }
  return maxCount;
}

function letterCount1(str) {
  var words = str.split(' ');
  var maxCount = 0;
  var maxWord = '';
  words.forEach(function(word) {
    var letterCountObj = getLetterCountObj(word);
    var maxLetterCount = findMaxLetterCount(letterCountObj)
    if (maxLetterCount > maxCount) {
      maxCount = maxLetterCount;
      maxWord = word;
    }
  });
  return maxWord;
}
